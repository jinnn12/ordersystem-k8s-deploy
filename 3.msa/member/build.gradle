plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.beyond'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// spring 웹서비스를 위한 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// getter, setter 등의 자동생성 및 개발의 편의성을 증대시켜주는 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트 코드 작성을 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 값 검증을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jwt토큰 관련 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // JSON 처리에 필요

	// redis에 연동하기 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// 파일처리를 위한 aws 의존성 추가
	implementation 'software.amazon.awssdk:s3:2.17.58'

	//eureka client의존성 추가
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

}

// 스프링 cloud 프로젝트로 만듬.
dependencyManagement{
	imports{
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2024.0.0'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
